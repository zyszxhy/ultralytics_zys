# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# RT-DETR-l object detection model with P3-P5 outputs. For details see https://docs.ultralytics.com/models/rtdetr

# Parameters
nc: 8  # number of classes  FLIR-3, VEDAI-8
scales: # model compound scaling constants, i.e. 'model=yolov8n-cls.yaml' will call yolov8-cls.yaml with scale 'n'
  # [depth, width, max_channels]
  l: [1.00, 1.00, 1024]

backbone:
  # [from, repeats, module, args]
  # rgb stream stage1-2
  - [-1, 1, HGStem, [32, 48]]  # 0-P2/4
  - [-1, 6, HGBlock, [48, 128, 3]]  # 1 stage 1 128
  - [-1, 1, DWConv, [128, 3, 2, 1, False]]  # 2-P3/8 128
  - [-1, 6, HGBlock, [96, 512, 3]]   # 3 stage 2 512
   # ir stream stage1-2
  - [-4, 1, HGStem, [32, 48]]  # 4-P2/4
  - [-1, 6, HGBlock, [48, 128, 3]]  # 5 stage 1
  - [-1, 1, DWConv, [128, 3, 2, 1, False]]  # 6-P3/8
  - [-1, 6, HGBlock, [96, 512, 3]]   # 7 stage 2
  # stage2 fusion
  - [[3, 7], 1, Add, [512]]  # 8 stage 2 rgb
  - [[7, 3], 1, Add, [512]]  # 9 stage 2 ir

  # rgb stream stage3
  - [8, 1, DWConv, [512, 3, 2, 1, False]]  # 10-P3/16 512
  - [-1, 6, HGBlock, [192, 1024, 5, True, False]]  # 11 cm, c2, k, light, shortcut 1024
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]  # 12 1024
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]  # 13 stage 3 1024
  # ir stream stage3
  - [9, 1, DWConv, [512, 3, 2, 1, False]]  # 14-P3/16
  - [-1, 6, HGBlock, [192, 1024, 5, True, False]]  # 15 cm, c2, k, light, shortcut
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]  # 16
  - [-1, 6, HGBlock, [192, 1024, 5, True, True]]  # 17 stage 3
  # stage3 fusion
  - [[13, 17], 1, Add, [1024]]  # 18 stage 3 rgb
  - [[17, 13], 1, Add, [1024]]  # 19 stage 3 ir
  
  # rgb stream stage4
  - [18, 1, DWConv, [1024, 3, 2, 1, False]]  # 20-P4/32
  - [-1, 6, HGBlock, [384, 2048, 5, True, False]]  # 21 stage 4
  # ir stream stage4
  - [19, 1, DWConv, [1024, 3, 2, 1, False]]  # 22-P4/32 1024
  - [-1, 6, HGBlock, [384, 2048, 5, True, False]]  # 23 stage 4 2048

  # fusion to head
  - [[8, 9], 1, Add, [512]]  # 24 stage 2
  - [[18, 19], 1, Add, [1024]] # 25 stage 3
  - [[21, 23], 1, Add, [2048]] # 26 stage 4

head:
  - [-1, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 27 input_proj.2
  - [-1, 1, AIFI, [1024, 8]]  # 28
  - [-1, 1, Conv, [256, 1, 1]]   # 29, Y5, lateral_convs.0

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 30
  - [25, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 31 input_proj.1
  - [[-2, -1], 1, Concat, [1]]  # 32
  - [-1, 3, RepC3, [256]]  # 33, fpn_blocks.0
  - [-1, 1, Conv, [256, 1, 1]]   # 34, Y4, lateral_convs.1

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 35
  - [24, 1, Conv, [256, 1, 1, None, 1, 1, False]]  # 36 input_proj.0
  - [[-2, -1], 1, Concat, [1]]  # 37 cat backbone P4
  - [-1, 3, RepC3, [256]]    # 38 X3 (21), fpn_blocks.1 bs*256*80*80

  - [-1, 1, Conv, [256, 3, 2]]   # 39, downsample_convs.0
  - [[-1, 34], 1, Concat, [1]]  # 40 cat Y4
  - [-1, 3, RepC3, [256]]    # F4 (41), pan_blocks.0 bs*256*40*40

  - [-1, 1, Conv, [256, 3, 2]]   # 42, downsample_convs.1
  - [[-1, 29], 1, Concat, [1]]  # 43 cat Y5
  - [-1, 3, RepC3, [256]]    # F5 (44), pan_blocks.1 bs*256*20*20

  - [[38, 41, 44], 1, RTDETRDecoder_m, [nc]]  # 45 Detect(P3, P4, P5)
