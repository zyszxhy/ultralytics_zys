# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80  # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024]  # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024]  # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768]   # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512]   # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512]   # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs


# l1: 2
# l2: 8
# c1: 32
# c2: 256
# sr: True
# factor: 2

l1: None
l2: None
c1: None
c2: None
sr: False
factor: None

# YOLOv8.0n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Pass, [3]]  # 0-P1/2

  - [-1, 1, Conv, [64, 3, 2]]  # 1-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 2-P2/4
  - [-1, 3, C2f, [128, True]] # 3
  - [-1, 1, Conv, [256, 3, 2]]  # 4-P3/8
  - [-1, 6, C2f, [256, True]] # 5
  - [-1, 1, Conv, [512, 3, 2]]  # 6-P4/16
  - [-1, 6, C2f, [512, True]] # 7
  - [-1, 1, Conv, [1024, 3, 2]]  # 9-P5/32
  - [-1, 3, C2f, [1024, True]]  # 9
  - [-1, 1, SPPF, [1024, 5]]  # 10


  - [0, 1, HWT, [4]]  # 11-P1/2
  - [-1, 1, Conv, [64, 3, 1]]  # 12-P1/2
  - [-1, 1, Conv, [128, 3, 2]]  # 13-P2/4
  - [-1, 3, C2f, [128, True]] # 14
  - [-1, 1, Conv, [256, 3, 2]]  # 15-P3/8
  - [-1, 6, C2f, [256, True]] # 16
  - [-1, 1, Conv, [512, 3, 2]]  # 17-P4/16
  - [-1, 6, C2f, [512, True]] # 18
  - [-1, 1, Conv, [1024, 3, 2]]  # 19-P5/32
  - [-1, 3, C2f, [1024, True]]  # 20
  - [-1, 1, SPPF, [1024, 5]]  # 21

# YOLOv8.0n head
head:
  - [10, 1, nn.Upsample, [None, 2, 'nearest']]  # 22
  - [[-1, 7], 1, Concat, [1]]  # 23 cat backbone P4
  - [-1, 3, C2f, [512]]  # 24

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 25
  - [[-1, 5], 1, Concat, [1]]  # 26 cat backbone P3
  - [-1, 3, C2f, [256]]  # 27 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]  # 28
  - [[-1, 24], 1, Concat, [1]]  # 29 cat head P4
  - [-1, 3, C2f, [512]]  # 30 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]  # 31
  - [[-1, 10], 1, Concat, [1]]  # 32 cat head P5
  - [-1, 3, C2f, [1024]]  # 33 (P5/32-large)



  - [21, 1, nn.Upsample, [None, 2, 'nearest']]  # 34
  - [[-1, 18], 1, Concat, [1]]  # 35 cat backbone P4
  - [-1, 3, C2f, [512]]  # 36

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 37
  - [[-1, 16], 1, Concat, [1]]  # 38 cat backbone P3
  - [-1, 3, C2f, [256]]  # 39 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]  # 40
  - [[-1, 36], 1, Concat, [1]]  # 41 cat head P4
  - [-1, 3, C2f, [512]]  # 42 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]  # 43
  - [[-1, 21], 1, Concat, [1]]  # 44 cat head P5
  - [-1, 3, C2f, [1024]]  # 45 (P5/32-large)

  - [[27, 39], 1, FFB, [256]]  # 46 (P3/8-small)
  - [[30, 42], 1, FFB, [512]]  # 47 (P4/16-medium)
  - [[33, 45], 1, FFB, [1024]]  # 48 (P5/32-large)


  - [[46, 47, 48], 1, Detect, [nc]]  # Detect(P3, P4, P5)
  # - [[15], 1, Detect, [nc]]  # Detect(P3, P4, P5)
